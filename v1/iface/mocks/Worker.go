// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	iface "github.com/RichardKnop/machinery/v1/iface"
	mock "github.com/stretchr/testify/mock"

	tasks "github.com/RichardKnop/machinery/v1/tasks"
)

// Worker is an autogenerated mock type for the Worker type
type Worker struct {
	mock.Mock
}

// CustomQueue provides a mock function with given fields:
func (_m *Worker) CustomQueue() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetServer provides a mock function with given fields:
func (_m *Worker) GetServer() *iface.Server {
	ret := _m.Called()

	var r0 *iface.Server
	if rf, ok := ret.Get(0).(func() *iface.Server); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*iface.Server)
		}
	}

	return r0
}

// Launch provides a mock function with given fields:
func (_m *Worker) Launch() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// LaunchAsync provides a mock function with given fields: errorsChan
func (_m *Worker) LaunchAsync(errorsChan chan<- error) {
	_m.Called(errorsChan)
}

// PreConsumeHandler provides a mock function with given fields:
func (_m *Worker) PreConsumeHandler() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Process provides a mock function with given fields: signature
func (_m *Worker) Process(signature *tasks.Signature) error {
	ret := _m.Called(signature)

	var r0 error
	if rf, ok := ret.Get(0).(func(*tasks.Signature) error); ok {
		r0 = rf(signature)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Quit provides a mock function with given fields:
func (_m *Worker) Quit() {
	_m.Called()
}

// SetErrorHandler provides a mock function with given fields: handler
func (_m *Worker) SetErrorHandler(handler func(error)) {
	_m.Called(handler)
}

// SetPostTaskHandler provides a mock function with given fields: handler
func (_m *Worker) SetPostTaskHandler(handler func(*tasks.Signature)) {
	_m.Called(handler)
}

// SetPreConsumeHandler provides a mock function with given fields: handler
func (_m *Worker) SetPreConsumeHandler(handler func(iface.Worker) bool) {
	_m.Called(handler)
}

// SetPreTaskHandler provides a mock function with given fields: handler
func (_m *Worker) SetPreTaskHandler(handler func(*tasks.Signature)) {
	_m.Called(handler)
}
